import React, { createContext, Component, createElement, createRef, forwardRef } from 'react';
import PropTypes from 'prop-types';
import hoistStatics from 'hoist-non-react-statics';
import getDisplayName from 'react-display-name';

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

var ScrolledContext = createContext({});

var maxScrollTop = function maxScrollTop(dom) {
  return dom.scrollHeight - dom.clientHeight;
};
var runScroll = function runScroll(dom, offset) {
  dom.scrollTop = offset; // eslint-disable-line no-param-reassign
};

var noop = function noop() {};

var StayScrolled =
/*#__PURE__*/
function (_Component) {
  _inherits(StayScrolled, _Component);

  function StayScrolled() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, StayScrolled);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StayScrolled)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "dom", createRef());

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onScroll", function () {
      var isScrolled = _this.wasScrolled = _this.isScrolled();

      var _this$props = _this.props,
          onScroll = _this$props.onScroll,
          onScrolled = _this$props.onScrolled;
      onScroll();

      if (isScrolled) {
        onScrolled();
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "scrollBottom", function () {
      var dom = _this.getDOM();

      var offset = maxScrollTop(dom);
      var _this$props2 = _this.props,
          runScroll$$1 = _this$props2.runScroll,
          debug = _this$props2.debug;
      debug("Scrolling bottom: scrollOffset=".concat(offset));
      runScroll$$1(dom, offset);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "stayScrolled", function () {
      var notify = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var onStayScrolled = _this.props.onStayScrolled;

      if (_this.wasScrolled) {
        _this.scrollBottom();
      }

      if (notify) {
        onStayScrolled(_this.wasScrolled);
      }
    });

    return _this;
  }

  _createClass(StayScrolled, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props3 = this.props,
          startScrolled = _this$props3.startScrolled,
          provideControllers = _this$props3.provideControllers;
      this.wasScrolled = startScrolled || this.isScrolled();

      if (startScrolled) {
        this.scrollBottom(false);
      }

      provideControllers({
        stayScrolled: this.stayScrolled,
        scrollBottom: this.scrollBottom
      });
    }
  }, {
    key: "getDOM",
    value: function getDOM() {
      return this.dom.current;
    }
  }, {
    key: "isScrolled",
    value: function isScrolled() {
      var stayInaccuracy = this.props.stayInaccuracy;
      var dom = this.getDOM(); // scrollTop is a floating point, the rest are integers rounded up
      // naively: actualScrollHeight = scrollHeight - (Math.ceil(scrollTop) - scrollTop)

      return Math.ceil(dom.scrollTop) >= maxScrollTop(dom) - stayInaccuracy;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props4 = this.props,
          component = _this$props4.component,
          children = _this$props4.children,
          startScrolled = _this$props4.startScrolled,
          onStayScrolled = _this$props4.onStayScrolled,
          onScroll = _this$props4.onScroll,
          onScrolled = _this$props4.onScrolled,
          runScroll$$1 = _this$props4.runScroll,
          stayInaccuracy = _this$props4.stayInaccuracy,
          provideControllers = _this$props4.provideControllers,
          debug = _this$props4.debug,
          rest = _objectWithoutProperties(_this$props4, ["component", "children", "startScrolled", "onStayScrolled", "onScroll", "onScrolled", "runScroll", "stayInaccuracy", "provideControllers", "debug"]);

      var props = _objectSpread({}, rest, {
        ref: this.dom,
        onScroll: this.onScroll
      });

      var context = {
        stayScrolled: this.stayScrolled,
        scrollBottom: this.scrollBottom
      };
      return React.createElement(ScrolledContext.Provider, {
        value: context
      }, createElement(component, props, children));
    }
  }]);

  return StayScrolled;
}(Component);

_defineProperty(StayScrolled, "propTypes", {
  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.element]),
  children: PropTypes.node,
  startScrolled: PropTypes.bool,
  onStayScrolled: PropTypes.func,
  onScroll: PropTypes.func,
  onScrolled: PropTypes.func,
  runScroll: PropTypes.func,
  stayInaccuracy: PropTypes.number,
  provideControllers: PropTypes.func,
  debug: PropTypes.func
});

_defineProperty(StayScrolled, "defaultProps", {
  children: null,
  // TODO
  component: 'div',
  startScrolled: true,
  stayInaccuracy: 0,
  onScroll: noop,
  onScrolled: noop,
  onStayScrolled: noop,
  runScroll: runScroll,
  provideControllers: noop,
  // TODO
  debug: noop
});

var scrolled_hoc = (function (WrappedComponent) {
  function forwardScrolled(props, ref) {
    return React.createElement(ScrolledContext.Consumer, null, function (_ref) {
      var stayScrolled = _ref.stayScrolled,
          scrollBottom = _ref.scrollBottom;
      return React.createElement(WrappedComponent, _extends({}, props, {
        ref: ref,
        stayScrolled: stayScrolled,
        scrollBottom: scrollBottom
      }));
    });
  }

  forwardScrolled.displayName = "scrolled(".concat(getDisplayName(WrappedComponent), ")");
  return hoistStatics(forwardRef(forwardScrolled), WrappedComponent);
});

export default StayScrolled;
export { scrolled_hoc as scrolled };
