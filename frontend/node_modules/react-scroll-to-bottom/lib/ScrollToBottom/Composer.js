"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _memoizeOne = _interopRequireDefault(require("memoize-one"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _simpleUpdateIn = _interopRequireDefault(require("simple-update-in"));

var _EventSpy = _interopRequireDefault(require("../EventSpy"));

var _FunctionContext = _interopRequireDefault(require("./FunctionContext"));

var _InternalContext = _interopRequireDefault(require("./InternalContext"));

var _SpineTo = _interopRequireDefault(require("../SpineTo"));

var _StateContext = _interopRequireDefault(require("./StateContext"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var Composer =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Composer, _React$Component);

  function Composer(props) {
    var _this;

    _classCallCheck(this, Composer);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Composer).call(this, props));
    _this.createStateContext = (0, _memoizeOne.default)(function (stateContext, scrollTop) {
      return _objectSpread({}, stateContext, {
        animating: scrollTop || scrollTop === 0
      });
    });
    _this.handleScroll = _this.handleScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this.handleScrollEnd = _this.handleScrollEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this.state = {
      functionContext: {
        scrollTo: function scrollTo(scrollTop) {
          return _this.setState(function () {
            return {
              scrollTop: scrollTop
            };
          });
        },
        scrollToBottom: function scrollToBottom() {
          return _this.state.functionContext.scrollTo('bottom');
        },
        scrollToEnd: function scrollToEnd() {
          var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),
              state = _assertThisInitialize.state;

          state.stateContext.mode === 'top' ? state.functionContext.scrollToTop() : state.functionContext.scrollToBottom();
        },
        scrollToStart: function scrollToStart() {
          var _assertThisInitialize2 = _assertThisInitialized(_assertThisInitialized(_this)),
              state = _assertThisInitialize2.state;

          state.stateContext.mode === 'top' ? state.functionContext.scrollToBottom() : state.functionContext.scrollToTop();
        },
        scrollToTop: function scrollToTop() {
          return _this.state.functionContext.scrollTo(0);
        }
      },
      internalContext: {
        _handleUpdate: function _handleUpdate() {
          var _assertThisInitialize3 = _assertThisInitialized(_assertThisInitialized(_this)),
              state = _assertThisInitialize3.state;

          state.stateContext.atEnd && state.functionContext.scrollToEnd();
        },
        _setTarget: function _setTarget(target) {
          return _this.setState(function () {
            return {
              target: target
            };
          });
        }
      },
      scrollTop: null,
      stateContext: {
        animating: false,
        atBottom: true,
        atEnd: true,
        atTop: true,
        mode: props.mode,
        threshold: 10
      },
      target: null
    };
    return _this;
  }

  _createClass(Composer, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      this.setState(function (_ref) {
        var stateContext = _ref.stateContext;
        return {
          stateContext: _objectSpread({}, stateContext, {
            mode: nextProps.mode === 'top' ? 'top' : 'bottom',
            threshold: nextProps.threshold
          })
        };
      });
    }
  }, {
    key: "handleScroll",
    value: function handleScroll() {
      this.setState(function (_ref2) {
        var stateContext = _ref2.stateContext,
            target = _ref2.target;

        if (target) {
          var mode = stateContext.mode,
              threshold = stateContext.threshold;
          var offsetHeight = target.offsetHeight,
              scrollHeight = target.scrollHeight,
              scrollTop = target.scrollTop;
          var atBottom = scrollHeight - scrollTop - offsetHeight <= threshold;
          var atTop = scrollTop <= threshold;
          var nextStateContext;
          nextStateContext = (0, _simpleUpdateIn.default)(stateContext, ['atBottom'], function () {
            return atBottom;
          });
          nextStateContext = (0, _simpleUpdateIn.default)(nextStateContext, ['atEnd'], function () {
            return mode === 'top' ? atTop : atBottom;
          });
          nextStateContext = (0, _simpleUpdateIn.default)(nextStateContext, ['atStart'], function () {
            return mode === 'top' ? atBottom : atTop;
          });
          nextStateContext = (0, _simpleUpdateIn.default)(nextStateContext, ['atTop'], function () {
            return atTop;
          });

          if (stateContext !== nextStateContext) {
            return {
              stateContext: nextStateContext
            };
          }
        }
      });
    }
  }, {
    key: "handleScrollEnd",
    value: function handleScrollEnd() {
      this.setState(function () {
        return {
          scrollTop: null
        };
      });
    }
  }, {
    key: "render",
    value: function render() {
      var createStateContext = this.createStateContext,
          handleScroll = this.handleScroll,
          handleScrollEnd = this.handleScrollEnd,
          _this$props = this.props,
          children = _this$props.children,
          debounce = _this$props.debounce,
          _this$state = this.state,
          functionContext = _this$state.functionContext,
          internalContext = _this$state.internalContext,
          scrollTop = _this$state.scrollTop,
          stateContext = _this$state.stateContext,
          target = _this$state.target;
      return _react.default.createElement(_InternalContext.default.Provider, {
        value: internalContext
      }, _react.default.createElement(_FunctionContext.default.Provider, {
        value: functionContext
      }, _react.default.createElement(_StateContext.default.Provider, {
        value: createStateContext(stateContext, scrollTop)
      }, children, target && _react.default.createElement(_EventSpy.default, {
        debounce: debounce,
        name: "scroll",
        onEvent: handleScroll,
        target: target
      }), target && (scrollTop || scrollTop === 0) && _react.default.createElement(_SpineTo.default, {
        name: "scrollTop",
        onEnd: handleScrollEnd,
        target: target,
        value: scrollTop
      }))));
    }
  }]);

  return Composer;
}(_react.default.Component);

exports.default = Composer;
Composer.defaultProps = {
  debounce: 17,
  threshold: 10
};
Composer.propTypes = {
  debounce: _propTypes.default.number,
  threshold: _propTypes.default.number
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,